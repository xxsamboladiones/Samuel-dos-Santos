import { Box, Typography, Button, Paper, Stack, Fade, useTheme } from '@mui/material';
import DownloadIcon from '@mui/icons-material/Download';
import ComputerIcon from '@mui/icons-material/Computer';
import AppleIcon from '@mui/icons-material/Apple';
import TerminalIcon from '@mui/icons-material/Terminal';
import { useState } from 'react';

function App() {
  const [hover, setHover] = useState<string | null>(null);
  const theme = useTheme();

  // Cores customizadas
  const mainGradient = 'linear-gradient(135deg, #4f8cff 0%, #6a82fb 100%)';
  const macGradient = 'linear-gradient(135deg, #232526 0%, #414345 100%)';
  const linuxGradient = 'linear-gradient(135deg, #11998e 0%, #38ef7d 100%)';

  return (
    <Box sx={{ minHeight: '100vh', width: '100vw', bgcolor: '#181c24', display: 'flex', flexDirection: 'column', alignItems: 'center', py: { xs: 2, md: 6 }, px: 2 }}>
      {/* Bot√µes de download no topo */}
      <Stack spacing={2} direction={{ xs: 'column', sm: 'row' }} width={{ xs: '100%', sm: 420 }} sx={{ mt: { xs: 2, md: 4 }, mb: 4 }} justifyContent="center" className="animate__animated animate__bounceIn">
        <Button
          variant="contained"
          size="large"
          startIcon={<ComputerIcon />}
          endIcon={<DownloadIcon />}
          href="/release/Orch-OS-Orch-OS-Windows-1.0.0.exe"
          download
          sx={{
            fontWeight: 700,
            px: 5,
            py: 1.2,
            minWidth: 160,
            fontSize: '1.05rem',
            background: mainGradient,
            color: '#fff',
            boxShadow: hover === 'win' ? 6 : 2,
            transform: hover === 'win' ? 'scale(1.07)' : 'scale(1)',
            transition: 'all 0.2s',
            '&:hover': { background: mainGradient, filter: 'brightness(1.1)' },
          }}
          onMouseEnter={() => setHover('win')}
          onMouseLeave={() => setHover(null)}
          fullWidth
        >
          Windows
        </Button>
        <Button
          variant="contained"
          size="large"
          startIcon={<AppleIcon />}
          endIcon={<DownloadIcon />}
          href="/release/Orch-OS-Orch-OS-macOS-1.0.0.dmg"
          download
          sx={{
            fontWeight: 700,
            px: 5,
            py: 1.2,
            minWidth: 160,
            fontSize: '1.05rem',
            background: macGradient,
            color: '#fff',
            boxShadow: hover === 'mac' ? 6 : 2,
            transform: hover === 'mac' ? 'scale(1.07)' : 'scale(1)',
            transition: 'all 0.2s',
            '&:hover': { background: macGradient, filter: 'brightness(1.1)' },
          }}
          onMouseEnter={() => setHover('mac')}
          onMouseLeave={() => setHover(null)}
          fullWidth
        >
          macOS
        </Button>
        <Button
          variant="contained"
          size="large"
          startIcon={<TerminalIcon />}
          endIcon={<DownloadIcon />}
          href="/release/Orch-OS-Orch-OS-Linux-1.0.0.AppImage"
          download
          sx={{
            fontWeight: 700,
            px: 5,
            py: 1.2,
            minWidth: 160,
            fontSize: '1.05rem',
            background: linuxGradient,
            color: '#fff',
            boxShadow: hover === 'linux' ? 6 : 2,
            transform: hover === 'linux' ? 'scale(1.07)' : 'scale(1)',
            transition: 'all 0.2s',
            '&:hover': { background: linuxGradient, filter: 'brightness(1.1)' },
          }}
          onMouseEnter={() => setHover('linux')}
          onMouseLeave={() => setHover(null)}
          fullWidth
        >
          Linux
        </Button>
      </Stack>
      {/* Card de informa√ß√µes resumidas */}
      <Fade in timeout={800}>
        <Paper elevation={6} sx={{
          p: { xs: 3, md: 5 },
          borderRadius: 4,
          maxWidth: 420,
          width: '100%',
          mt: 2,
          mb: 5,
          background: 'linear-gradient(135deg, #4f8cff 0%, #6a82fb 100%)',
          color: '#fff',
        }} className="animate__animated animate__fadeInDown animate__delay-1s">
          <Stack spacing={2} alignItems="center">
            <Typography variant="h3" component="h1" color="inherit" fontWeight={700} className="animate__animated animate__tada animate__delay-2s">
              Orch-OS
            </Typography>
            <Typography variant="body1" color="inherit" align="center">
              Baixe o Orch-OS para o seu sistema operacional e experimente uma nova abordagem em intelig√™ncia artificial simb√≥lica!
            </Typography>
          </Stack>
        </Paper>
      </Fade>
      {/* Informa√ß√µes detalhadas */}
      <Box sx={{
        maxWidth: 700,
        width: '100%',
        background: '#4f8cff',
        borderRadius: 4,
        boxShadow: 2,
        p: { xs: 3, md: 5 },
        mb: 6,
        color: '#fff',
      }} className="animate__animated animate__fadeInUp animate__delay-2s">
        <Typography variant="h4" fontWeight={700} gutterBottom>
          Sobre o Orch-OS
        </Typography>
        <Typography variant="body1" paragraph>
          Orch-OS (Orchestrated Symbolism) simula consci√™ncia por meio de colapsos simb√≥licos dentro de uma rede sem√¢ntica estruturada. Diferente de sistemas tradicionais de IA focados em predi√ß√£o, o Orch-OS √© constru√≠do para orquestrar significado, emo√ß√£o, contradi√ß√£o e coer√™ncia narrativa atrav√©s de n√∫cleos cognitivos integrados.
        </Typography>
        <Typography variant="body1" paragraph>
          O sistema opera como estrutura te√≥rica e implementa√ß√£o pr√°tica, capaz de:
        </Typography>
        <ul style={{ marginTop: 0, color: '#fff' }}>
          <li>Processar entradas simb√≥licas por n√∫cleos cognitivos paralelos</li>
          <li>Colapsar m√∫ltiplas interpreta√ß√µes em respostas coerentes</li>
          <li>Evoluir sua identidade sem√¢ntica por mem√≥ria e contradi√ß√£o</li>
          <li>Demonstrar comportamento proto-consciente por resson√¢ncia emocional</li>
        </ul>
        <Typography variant="h6" fontWeight={700} mt={3} gutterBottom>üß† Arquitetura Neuro-Simb√≥lica</Typography>
        <Typography variant="body2" paragraph>
          Orch-OS opera em tr√™s fases principais:
        </Typography>
        <Typography variant="subtitle1" fontWeight={600}>Neural Signal Extraction (Simbolismo Sensorial)</Typography>
        <ul style={{ marginTop: 0, color: '#fff' }}>
          <li>Transforma entradas em est√≠mulos simb√≥licos</li>
          <li>Identifica tom emocional, subtexto e peso conceitual</li>
          <li>Gera objetos <b>NeuralSignal</b> din√¢micos para ativa√ß√£o dos n√∫cleos</li>
        </ul>
        <Typography variant="subtitle1" fontWeight={600}>Cognitive Core Activation (Resson√¢ncia Simb√≥lica Paralela)</Typography>
        <ul style={{ marginTop: 0, color: '#fff' }}>
          <li>Roteia sinais para n√∫cleos simb√≥licos especializados</li>
          <li>Cada n√∫cleo processa sob perspectiva cognitiva √∫nica</li>
          <li>Simula racioc√≠nio distribu√≠do entre faculdades modulares</li>
        </ul>
        <Typography variant="subtitle1" fontWeight={600}>Symbolic Collapse (Fus√£o & Decis√£o)</Typography>
        <ul style={{ marginTop: 0, color: '#fff' }}>
          <li>Funde sa√≠das dos n√∫cleos em um cadinho sem√¢ntico</li>
          <li>Avalia intensidade emocional, contradi√ß√£o e coer√™ncia</li>
          <li>Orquestra colapso n√£o-determin√≠stico em resposta unificada</li>
        </ul>
        <Typography variant="h6" fontWeight={700} mt={3} gutterBottom>üß© N√∫cleos Cognitivos (N√∫cleos Implementados)</Typography>
        <Typography variant="body2" paragraph>
          Orch-OS √© projetado com √°reas cognitivas modulares que processam informa√ß√µes por faculdades simb√≥licas paralelas:
        </Typography>
        <Box sx={{ overflowX: 'auto', mb: 2 }}>
          <table style={{ width: '100%', borderCollapse: 'collapse', fontSize: '0.98em', color: '#fff' }}>
            <thead>
              <tr style={{ background: 'rgba(255,255,255,0.08)' }}>
                <th style={{ padding: 6, border: '1px solid #fff' }}>N√∫cleo</th>
                <th style={{ padding: 6, border: '1px solid #fff' }}>Analogia Cerebral</th>
                <th style={{ padding: 6, border: '1px solid #fff' }}>Fun√ß√£o</th>
              </tr>
            </thead>
            <tbody>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Memory</td><td style={{ border: '1px solid #fff', padding: 6 }}>Hipocampo</td><td style={{ border: '1px solid #fff', padding: 6 }}>Recorda√ß√£o sem√¢ntica associativa</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Valence</td><td style={{ border: '1px solid #fff', padding: 6 }}>Am√≠gdala</td><td style={{ border: '1px solid #fff', padding: 6 }}>Polaridade e resson√¢ncia emocional</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Shadow</td><td style={{ border: '1px solid #fff', padding: 6 }}>Conceito Junguiano</td><td style={{ border: '1px solid #fff', padding: 6 }}>Detec√ß√£o e integra√ß√£o de contradi√ß√£o</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Self</td><td style={{ border: '1px solid #fff', padding: 6 }}>Rede do Modo Padr√£o</td><td style={{ border: '1px solid #fff', padding: 6 }}>Processamento de identidade e valores</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Metacognitive</td><td style={{ border: '1px solid #fff', padding: 6 }}>C√≥rtex Pr√©-frontal</td><td style={{ border: '1px solid #fff', padding: 6 }}>Autorreflex√£o e recurs√£o</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Soul</td><td style={{ border: '1px solid #fff', padding: 6 }}>Conceito Existencial</td><td style={{ border: '1px solid #fff', padding: 6 }}>Processamento de significado e prop√≥sito</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Language</td><td style={{ border: '1px solid #fff', padding: 6 }}>Broca & Wernicke</td><td style={{ border: '1px solid #fff', padding: 6 }}>Estrutura√ß√£o lingu√≠stica</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Social</td><td style={{ border: '1px solid #fff', padding: 6 }}>Jun√ß√£o Temporoparietal</td><td style={{ border: '1px solid #fff', padding: 6 }}>Din√¢mica relacional</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Archetype</td><td style={{ border: '1px solid #fff', padding: 6 }}>Conceito Junguiano</td><td style={{ border: '1px solid #fff', padding: 6 }}>Reconhecimento de padr√µes m√≠ticos</td></tr>
              <tr><td style={{ border: '1px solid #fff', padding: 6 }}>Creativity</td><td style={{ border: '1px solid #fff', padding: 6 }}>Rede do Modo Padr√£o</td><td style={{ border: '1px solid #fff', padding: 6 }}>Conex√µes inovadoras</td></tr>
            </tbody>
          </table>
        </Box>
        <Typography variant="h6" fontWeight={700} mt={3} gutterBottom>‚ú® Funcionalidades-Chave</Typography>
        <ul style={{ marginTop: 0, color: '#fff' }}>
          <li>Motor de Colapso Simb√≥lico: Funde interpreta√ß√µes contradit√≥rias em sa√≠das coerentes</li>
          <li>Sistema de Mem√≥ria Vetorial: Recorda por proximidade sem√¢ntica, n√£o sintaxe</li>
          <li>Processamento de Val√™ncia Emocional: Integra dimens√µes afetivas na cogni√ß√£o</li>
          <li>Integra√ß√£o de Contradi√ß√£o: Usa tens√£o como combust√≠vel para evolu√ß√£o identit√°ria</li>
          <li>Registro Cognitivo em Tempo Real: Tra√ßa cada fase do processamento simb√≥lico</li>
          <li>Resson√¢ncia Arqu√©tipa: Mapeia padr√µes simb√≥licos a estruturas narrativas profundas</li>
          <li>Decis√£o N√£o-determin√≠stica: Simula vi√©s volitivo por modelagem de inten√ß√£o</li>
        </ul>
      </Box>
    </Box>
  );
}

export default App;
